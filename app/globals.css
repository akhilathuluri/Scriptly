@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
    --primary: 221.2 83.2% 53.3%;
    --primary-foreground: 210 40% 98%;
    --secondary: 210 40% 96%;
    --secondary-foreground: 222.2 84% 4.9%;
    --muted: 210 40% 96%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --accent: 210 40% 96%;
    --accent-foreground: 222.2 84% 4.9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 221.2 83.2% 53.3%;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.75rem;
    --shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
    --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    --primary: 217.2 91.2% 59.8%;
    --primary-foreground: 222.2 84% 4.9%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 224.3 76.3% 94.1%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
    --shadow: 0 1px 3px 0 rgb(0 0 0 / 0.3), 0 1px 2px -1px rgb(0 0 0 / 0.3);
    --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.3), 0 4px 6px -4px rgb(0 0 0 / 0.3);
    --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.3), 0 8px 10px -6px rgb(0 0 0 / 0.3);
  }
}

@layer base {
  * {
    @apply border-border;
  }
  
  body {
    @apply bg-background text-foreground transition-colors duration-300 ease-in-out;
    font-feature-settings: "rlig" 1, "calt" 1;
  }

  /* Smooth scrolling */
  html {
    scroll-behavior: smooth;
  }

  /* Enhanced focus styles */
  *:focus-visible {
    @apply outline-none ring-2 ring-ring ring-offset-2 ring-offset-background;
  }

  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }

  ::-webkit-scrollbar-track {
    @apply bg-transparent;
  }

  ::-webkit-scrollbar-thumb {
    @apply bg-border rounded-full hover:bg-muted-foreground/50 transition-colors;
  }

  ::-webkit-scrollbar-corner {
    @apply bg-transparent;
  }
}

/* Removed global overflow hidden to allow landing page scrolling */

@layer utilities {
  /* Premium animations */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideInRight {
    from {
      opacity: 0;
      transform: translateX(20px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes slideInLeft {
    from {
      opacity: 0;
      transform: translateX(-20px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }

  @keyframes shimmer {
    0% {
      background-position: -200px 0;
    }
    100% {
      background-position: calc(200px + 100%) 0;
    }
  }

  .animate-fade-in-up {
    animation: fadeInUp 0.6s ease-out;
  }

  .animate-slide-in-right {
    animation: slideInRight 0.4s ease-out;
  }

  .animate-slide-in-left {
    animation: slideInLeft 0.4s ease-out;
  }

  .animate-fade-in {
    animation: fadeIn 0.5s ease-out;
  }

  .animate-pulse-slow {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  .animate-shimmer {
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
    background-size: 200px 100%;
    animation: shimmer 1.5s infinite;
  }

  /* Enhanced prose styling */
  .prose {
    color: hsl(var(--foreground));
    line-height: 1.7;
    max-width: none;
  }

  .prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
    color: hsl(var(--foreground));
    font-weight: 700;
    margin-top: 2em;
    margin-bottom: 0.75em;
    letter-spacing: -0.025em;
    scroll-margin-top: 2rem;
  }

  .prose h1 { 
    font-size: 2.5em; 
    font-weight: 800;
    background: linear-gradient(135deg, hsl(var(--foreground)), hsl(var(--muted-foreground)));
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
  
  .prose h2 { 
    font-size: 1.875em; 
    font-weight: 700;
    border-bottom: 2px solid hsl(var(--border));
    padding-bottom: 0.5rem;
  }
  
  .prose h3 { 
    font-size: 1.5em; 
    font-weight: 600;
  }

  .prose p {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    text-align: justify;
  }

  .prose a {
    color: hsl(var(--primary));
    text-decoration: none;
    font-weight: 500;
    border-bottom: 1px solid transparent;
    transition: all 0.2s ease;
  }

  .prose a:hover {
    border-bottom-color: hsl(var(--primary));
    text-shadow: 0 0 8px hsl(var(--primary) / 0.3);
  }

  .prose code {
    background: hsl(var(--muted));
    padding: 0.25rem 0.5rem;
    border-radius: 0.375rem;
    font-size: 0.875em;
    font-weight: 500;
    border: 1px solid hsl(var(--border));
    box-shadow: 0 1px 2px hsl(var(--shadow));
  }

  .prose pre {
    background: hsl(var(--muted));
    padding: 1.5rem;
    border-radius: 0.75rem;
    overflow-x: auto;
    margin: 2em 0;
    border: 1px solid hsl(var(--border));
    box-shadow: hsl(var(--shadow-lg));
    position: relative;
  }

  .prose pre::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(90deg, transparent, hsl(var(--primary)), transparent);
  }

  .prose pre code {
    background: transparent;
    padding: 0;
    border-radius: 0;
    border: none;
    box-shadow: none;
    font-size: 0.875em;
  }

  .prose blockquote {
    border-left: 4px solid hsl(var(--primary));
    padding: 1rem 1.5rem;
    color: hsl(var(--muted-foreground));
    font-style: italic;
    margin: 2em 0;
    background: hsl(var(--muted) / 0.3);
    border-radius: 0 0.5rem 0.5rem 0;
    position: relative;
  }

  .prose blockquote::before {
    content: '"';
    font-size: 4rem;
    color: hsl(var(--primary) / 0.3);
    position: absolute;
    top: -0.5rem;
    left: 0.5rem;
    font-family: serif;
  }

  .prose ul, .prose ol {
    padding-left: 2rem;
    margin: 1.5em 0;
  }

  .prose ul {
    list-style-type: disc;
  }

  .prose ol {
    list-style-type: decimal;
  }

  .prose ul ul, .prose ol ol, .prose ul ol, .prose ol ul {
    margin: 0.5em 0;
  }

  .prose ul ul {
    list-style-type: circle;
  }

  .prose ul ul ul {
    list-style-type: square;
  }

  .prose li {
    margin: 0.5em 0;
    position: relative;
    line-height: 1.6;
  }

  .prose ul li::marker {
    color: hsl(var(--primary));
  }

  .prose ol li::marker {
    color: hsl(var(--primary));
    font-weight: 600;
  }

  /* Enhanced list styling for nested lists */
  .prose ul li ul li {
    margin-left: 1rem;
  }

  .prose ol li ol li {
    margin-left: 1rem;
  }

  /* Task list support */
  .prose li input[type="checkbox"] {
    margin-right: 0.5rem;
    accent-color: hsl(var(--primary));
  }

  .prose li input[type="checkbox"]:checked + * {
    text-decoration: line-through;
    opacity: 0.7;
  }

  .prose img {
    max-width: 100%;
    height: auto;
    border-radius: 0.75rem;
    margin: 2em 0;
    box-shadow: hsl(var(--shadow-lg));
    transition: transform 0.3s ease;
  }

  .prose img:hover {
    transform: scale(1.02);
  }

  .prose table {
    width: 100%;
    border-collapse: collapse;
    margin: 2em 0;
    border-radius: 0.75rem;
    overflow: hidden;
    box-shadow: hsl(var(--shadow));
  }

  .prose th, .prose td {
    border: 1px solid hsl(var(--border));
    padding: 0.75rem 1rem;
    text-align: left;
  }

  .prose th {
    background: hsl(var(--muted));
    font-weight: 600;
    color: hsl(var(--foreground));
  }

  .prose tr:nth-child(even) {
    background: hsl(var(--muted) / 0.3);
  }

  .prose hr {
    border: 0;
    height: 2px;
    background: linear-gradient(90deg, transparent, hsl(var(--border)), transparent);
    margin: 3em 0;
  }

  /* Glass morphism effects */
  .glass {
    background: hsl(var(--background) / 0.8);
    backdrop-filter: blur(12px);
    border: 1px solid hsl(var(--border) / 0.5);
  }

  .glass-dark {
    background: hsl(var(--background) / 0.9);
    backdrop-filter: blur(16px);
    border: 1px solid hsl(var(--border) / 0.3);
  }

  /* Gradient text */
  .gradient-text {
    background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--secondary)));
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  /* Enhanced shadows */
  .shadow-premium {
    box-shadow: 
      0 4px 6px -1px hsl(var(--shadow)),
      0 2px 4px -1px hsl(var(--shadow)),
      0 0 0 1px hsl(var(--border));
  }

  .shadow-premium-lg {
    box-shadow: 
      0 10px 15px -3px hsl(var(--shadow-lg)),
      0 4px 6px -2px hsl(var(--shadow-lg)),
      0 0 0 1px hsl(var(--border));
  }

  /* Math equation styling */
  .math-display {
    margin: 1.5em 0;
    padding: 1em;
    background: hsl(var(--muted) / 0.3);
    border-radius: 0.5rem;
    overflow-x: auto;
    text-align: center;
  }

  .math-inline {
    display: inline-block;
    margin: 0 0.2em;
  }

  .math-error {
    color: hsl(var(--destructive));
    font-family: monospace;
    background: hsl(var(--destructive) / 0.1);
    padding: 0.2em 0.4em;
    border-radius: 0.25rem;
  }

  /* KaTeX styling overrides */
  .katex {
    font-size: 1.1em;
  }

  .katex-display {
    margin: 0;
  }

  /* Mermaid diagram styling */
  .mermaid-container {
    margin: 2em 0;
    padding: 1.5em;
    background: hsl(var(--muted) / 0.3);
    border-radius: 0.75rem;
    overflow-x: auto;
    display: flex;
    justify-content: center;
    align-items: center;
    border: 1px solid hsl(var(--border));
  }

  .mermaid-container svg {
    max-width: 100%;
    height: auto;
    font-family: inherit !important;
  }

  /* Ensure text is visible in Mermaid diagrams */
  .mermaid-container svg text {
    fill: hsl(var(--foreground)) !important;
    font-family: inherit !important;
  }

  .mermaid-container svg .nodeLabel,
  .mermaid-container svg .edgeLabel {
    color: hsl(var(--foreground)) !important;
    fill: hsl(var(--foreground)) !important;
  }

  /* Fix for flowchart text */
  .mermaid-container svg .label {
    color: hsl(var(--foreground)) !important;
    fill: hsl(var(--foreground)) !important;
  }

  /* Critical fix for foreignObject text in flowcharts, class diagrams, and state diagrams */
  .mermaid-container svg foreignObject {
    color: #333333 !important;
    overflow: visible !important;
    font-size: 14px !important;
  }

  .mermaid-container svg foreignObject * {
    color: #333333 !important;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;
  }

  .mermaid-container svg foreignObject div {
    color: #333333 !important;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;
    display: block !important;
    line-height: 1.4 !important;
    font-size: 14px !important;
    text-align: center !important;
  }

  .mermaid-container svg foreignObject span {
    color: #333333 !important;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;
    font-size: 14px !important;
  }

  .mermaid-container svg foreignObject p {
    color: #333333 !important;
    margin: 0 !important;
    padding: 0 !important;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;
    font-size: 14px !important;
  }

  /* Ensure class diagram text is visible */
  .mermaid-container svg .classLabel,
  .mermaid-container svg .classTitle,
  .mermaid-container svg .label foreignObject {
    color: hsl(var(--foreground)) !important;
    fill: hsl(var(--foreground)) !important;
  }

  /* Ensure state diagram text is visible */
  .mermaid-container svg .stateLabel,
  .mermaid-container svg .statediagram-state-label {
    fill: hsl(var(--foreground)) !important;
    color: hsl(var(--foreground)) !important;
  }

  /* Additional text element fixes */
  .mermaid-container svg .edgeLabel foreignObject,
  .mermaid-container svg .nodeLabel foreignObject {
    color: hsl(var(--foreground)) !important;
  }

  .mermaid-container svg .edgeLabel foreignObject div,
  .mermaid-container svg .nodeLabel foreignObject div {
    color: hsl(var(--foreground)) !important;
  }

  .mermaid-error {
    color: hsl(var(--destructive));
    font-family: monospace;
    background: hsl(var(--destructive) / 0.1);
    padding: 1em;
    border-radius: 0.5rem;
    border: 1px solid hsl(var(--destructive) / 0.3);
    margin: 1em 0;
  }

  /* Mermaid theme adjustments for dark mode */
  .dark .mermaid-container {
    background: hsl(var(--muted) / 0.2);
  }

  /* Ensure mermaid diagrams are visible in dark mode */
  .dark .mermaid-container svg {
    filter: brightness(0.9) contrast(1.1);
  }

  /* Dark mode text fixes for Mermaid */
  .dark .mermaid-container svg text {
    fill: #ffffff !important;
  }

  .dark .mermaid-container svg foreignObject {
    color: #ffffff !important;
  }

  .dark .mermaid-container svg foreignObject *,
  .dark .mermaid-container svg foreignObject div,
  .dark .mermaid-container svg foreignObject span,
  .dark .mermaid-container svg foreignObject p {
    color: #ffffff !important;
  }

  /* Ensure shapes have proper fill in dark mode */
  .dark .mermaid-container svg rect,
  .dark .mermaid-container svg circle,
  .dark .mermaid-container svg polygon,
  .dark .mermaid-container svg path {
    fill: hsl(var(--card)) !important;
    stroke: hsl(var(--primary)) !important;
  }

  /* Keep edge lines visible */
  .dark .mermaid-container svg path.flowchart-link,
  .dark .mermaid-container svg line.relation,
  .dark .mermaid-container svg path.transition {
    stroke: hsl(var(--primary)) !important;
    fill: none !important;
  }

  /* Chatbot message formatting */
  .chatbot-message {
    line-height: 1.6;
  }

  .chatbot-message p {
    margin: 0.5em 0;
  }

  .chatbot-message ul,
  .chatbot-message ol {
    margin: 0.5em 0;
    padding-left: 1.5em;
  }

  .chatbot-message li {
    margin: 0.25em 0;
  }

  .chatbot-message code {
    font-family: 'Courier New', monospace;
    font-size: 0.9em;
  }

  .chatbot-message pre {
    font-family: 'Courier New', monospace;
    white-space: pre-wrap;
    word-wrap: break-word;
  }

  .chatbot-message strong {
    font-weight: 600;
  }

  .chatbot-message em {
    font-style: italic;
  }

  .chatbot-message h1,
  .chatbot-message h2,
  .chatbot-message h3 {
    font-weight: 600;
    line-height: 1.3;
  }

  /* Landing page animations */
  @keyframes blob {
    0%, 100% {
      transform: translate(0, 0) scale(1);
    }
    25% {
      transform: translate(20px, -50px) scale(1.1);
    }
    50% {
      transform: translate(-20px, 20px) scale(0.9);
    }
    75% {
      transform: translate(50px, 50px) scale(1.05);
    }
  }

  .animate-blob {
    animation: blob 7s infinite;
  }

  .animation-delay-2000 {
    animation-delay: 2s;
  }

  .animation-delay-4000 {
    animation-delay: 4s;
  }

  @keyframes gradient {
    0%, 100% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
  }

  .animate-gradient {
    background-size: 200% 200%;
    animation: gradient 3s ease infinite;
  }

  /* Grid pattern */
  .bg-grid-pattern {
    background-image: 
      linear-gradient(to right, hsl(var(--border)) 1px, transparent 1px),
      linear-gradient(to bottom, hsl(var(--border)) 1px, transparent 1px);
    background-size: 40px 40px;
  }

  /* Smooth scroll */
  html {
    scroll-behavior: smooth;
  }

  /* Enhanced hover effects */
  .hover-lift {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .hover-lift:hover {
    transform: translateY(-4px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
  }

  /* Glow effect */
  .glow {
    position: relative;
  }

  .glow::before {
    content: '';
    position: absolute;
    inset: -2px;
    border-radius: inherit;
    padding: 2px;
    background: linear-gradient(45deg, hsl(var(--primary)), hsl(var(--primary) / 0.5));
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .glow:hover::before {
    opacity: 1;
  }

  /* 3D Animations */
  .perspective-container {
    perspective: 1000px;
  }

  .card-3d {
    transform-style: preserve-3d;
    transition: transform 0.6s cubic-bezier(0.23, 1, 0.32, 1);
  }

  .card-3d:hover {
    transform: rotateY(5deg) rotateX(-5deg) translateZ(20px);
  }

  /* 3D Floating Animation */
  @keyframes float-3d {
    0%, 100% {
      transform: translateY(0px) translateZ(0px) rotateX(0deg) rotateY(0deg);
    }
    25% {
      transform: translateY(-10px) translateZ(10px) rotateX(2deg) rotateY(-2deg);
    }
    50% {
      transform: translateY(-5px) translateZ(15px) rotateX(-1deg) rotateY(2deg);
    }
    75% {
      transform: translateY(-15px) translateZ(5px) rotateX(1deg) rotateY(-1deg);
    }
  }

  .card-3d-float {
    transform-style: preserve-3d;
    animation: float-3d 6s ease-in-out infinite;
    transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1);
  }

  .card-3d-float:hover {
    animation-play-state: paused;
    transform: translateY(-12px) scale(1.02) rotateX(5deg) rotateY(-5deg);
  }

  /* Typing Animation */
  @keyframes typing {
    from {
      width: 0;
    }
    to {
      width: 100%;
    }
  }

  @keyframes blink {
    50% {
      border-color: transparent;
    }
  }

  .typing-animation {
    overflow: hidden;
    border-right: 2px solid hsl(var(--primary));
    white-space: nowrap;
    animation: typing 2s steps(30) 1s forwards, blink 0.75s step-end infinite;
    width: 0;
  }

  /* 3D Tilt on Mouse Move */
  .tilt-3d {
    transform-style: preserve-3d;
    transition: transform 0.1s ease-out;
  }

  /* Parallax Layers */
  .parallax-layer {
    transform-style: preserve-3d;
    transition: transform 0.3s cubic-bezier(0.23, 1, 0.32, 1);
  }

  /* Depth Effect */
  @keyframes depth-float {
    0%, 100% {
      transform: translateZ(0px);
    }
    50% {
      transform: translateZ(30px);
    }
  }

  .depth-float {
    animation: depth-float 4s ease-in-out infinite;
  }

  /* 3D Flip Card */
  .flip-card {
    perspective: 1000px;
  }

  .flip-card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    transition: transform 0.8s;
    transform-style: preserve-3d;
  }

  .flip-card:hover .flip-card-inner {
    transform: rotateY(180deg);
  }

  /* Smooth 3D Rotation */
  @keyframes rotate-3d {
    0% {
      transform: rotateY(0deg) rotateX(0deg);
    }
    100% {
      transform: rotateY(360deg) rotateX(360deg);
    }
  }

  .rotate-3d {
    animation: rotate-3d 20s linear infinite;
    transform-style: preserve-3d;
  }

  /* Isometric Effect */
  .isometric {
    transform: rotateX(45deg) rotateZ(45deg);
    transform-style: preserve-3d;
  }

  /* 3D Button Press */
  .button-3d {
    transform: translateZ(0);
    transition: transform 0.2s ease;
  }

  .button-3d:active {
    transform: translateZ(-10px);
  }

  /* Layered Depth */
  .layer-1 {
    transform: translateZ(10px);
  }

  .layer-2 {
    transform: translateZ(20px);
  }

  .layer-3 {
    transform: translateZ(30px);
  }

  /* Smooth GPU Acceleration */
  .transform-gpu {
    transform: translateZ(0);
    backface-visibility: hidden;
    will-change: transform;
  }
}
